
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Fingerprint, ArrowLeft, Smartphone, Eye } from 'lucide-react';
import { Link } from 'react-router-dom';

interface BiometricLoginProps {
  onLogin: (email: string, role: string) => void;
}

const BiometricLogin: React.FC<BiometricLoginProps> = ({ onLogin }) => {
  const [isScanning, setIsScanning] = useState(false);
  const [selectedMethod, setSelectedMethod] = useState<'fingerprint' | 'face'>('fingerprint');

  const handleBiometricAuth = async () => {
    setIsScanning(true);
    // Simulate biometric authentication
    setTimeout(() => {
      setIsScanning(false);
      onLogin('biometric@user.com', 'customer');
    }, 2000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex items-center justify-center p-4">
      <Card className="w-full max-w-md bg-slate-800/50 border-slate-700 backdrop-blur-lg">
        <CardHeader className="text-center">
          <div className="flex items-center justify-center mb-4">
            <Link to="/auth/login" className="absolute left-6 text-slate-400 hover:text-white">
              <ArrowLeft size={20} />
            </Link>
            {selectedMethod === 'fingerprint' ? (
              <Fingerprint size={32} className="text-orange-500" />
            ) : (
              <Eye size={32} className="text-orange-500" />
            )}
          </div>
          <CardTitle className="text-2xl font-bold text-white">Biometric Login</CardTitle>
          <CardDescription className="text-slate-300">
            Use your {selectedMethod === 'fingerprint' ? 'fingerprint' : 'face'} to access your account
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex space-x-2 mb-6">
            <Button
              variant={selectedMethod === 'fingerprint' ? 'default' : 'outline'}
              onClick={() => setSelectedMethod('fingerprint')}
              className="flex-1"
            >
              <Fingerprint size={16} className="mr-2" />
              Fingerprint
            </Button>
            <Button
              variant={selectedMethod === 'face' ? 'default' : 'outline'}
              onClick={() => setSelectedMethod('face')}
              className="flex-1"
            >
              <Eye size={16} className="mr-2" />
              Face ID
            </Button>
          </div>

          <div className="text-center py-8">
            <div className={`mx-auto w-32 h-32 rounded-full border-4 flex items-center justify-center ${
              isScanning ? 'border-orange-500 animate-pulse' : 'border-slate-600'
            }`}>
              {selectedMethod === 'fingerprint' ? (
                <Fingerprint size={64} className={isScanning ? 'text-orange-500' : 'text-slate-400'} />
              ) : (
                <Eye size={64} className={isScanning ? 'text-orange-500' : 'text-slate-400'} />
              )}
            </div>
            <p className="text-slate-300 mt-4">
              {isScanning ? 'Authenticating...' : `Place your ${selectedMethod === 'fingerprint' ? 'finger' : 'face'} to authenticate`}
            </p>
          </div>

          <Button 
            onClick={handleBiometricAuth} 
            disabled={isScanning}
            className="w-full bg-orange-500 hover:bg-orange-600 text-white"
          >
            <Smartphone className="mr-2" size={18} />
            {isScanning ? 'Scanning...' : 'Start Authentication'}
          </Button>
        </CardContent>
      </Card>
    </div>
  );
};

export default BiometricLogin;