
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Download, FileText, Calendar, Filter } from 'lucide-react';

const Statements = () => {
  const [selectedAccount, setSelectedAccount] = useState('all');
  const [dateFrom, setDateFrom] = useState('');
  const [dateTo, setDateTo] = useState('');

  const accounts = [
    { id: 'all', name: 'All Accounts' },
    { id: 'savings', name: 'Savings Account - ****5432' },
    { id: 'checking', name: 'Checking Account - ****7890' },
    { id: 'credit', name: 'Credit Card - ****1234' }
  ];

  const statements = [
    {
      id: 1,
      type: 'Monthly Statement',
      account: 'Savings Account',
      period: 'January 2024',
      date: '2024-02-01',
      size: '245 KB'
    },
    {
      id: 2,
      type: 'Transaction Report',
      account: 'Checking Account',
      period: 'December 2023',
      date: '2024-01-01',
      size: '189 KB'
    },
    {
      id: 3,
      type: 'Annual Summary',
      account: 'All Accounts',
      period: '2023',
      date: '2024-01-15',
      size: '512 KB'
    }
  ];

  const handleDownload = (statementId: number) => {
    console.log(`Downloading statement ${statementId}`);
  };

  const handleGenerateStatement = () => {
    console.log('Generating new statement');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 text-white p-6">
      <div className="max-w-7xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-white mb-2">Bank Statements</h1>
          <p className="text-slate-400">Download and manage your account statements</p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
          {/* Generate New Statement */}
          <Card className="lg:col-span-1 bg-slate-800/50 border-slate-700">
            <CardHeader>
              <CardTitle className="text-white flex items-center">
                <FileText className="mr-2" size={20} />
                Generate Statement
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="space-y-2">
                <Label className="text-slate-300">Account</Label>
                <select 
                  value={selectedAccount}
                  onChange={(e) => setSelectedAccount(e.target.value)}
                  className="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-orange-500"
                >
                  {accounts.map((account) => (
                    <option key={account.id} value={account.id}>{account.name}</option>
                  ))}
                </select>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <div className="space-y-2">
                  <Label className="text-slate-300">From</Label>
                  <Input
                    type="date"
                    value={dateFrom}
                    onChange={(e) => setDateFrom(e.target.value)}
                    className="bg-slate-700 border-slate-600 text-white"
                  />
                </div>
                <div className="space-y-2">
                  <Label className="text-slate-300">To</Label>
                  <Input
                    type="date"
                    value={dateTo}
                    onChange={(e) => setDateTo(e.target.value)}
                    className="bg-slate-700 border-slate-600 text-white"
                  />
                </div>
              </div>
              <Button 
                onClick={handleGenerateStatement}
                className="w-full bg-orange-500 hover:bg-orange-600 text-white"
              >
                <FileText className="mr-2" size={16} />
                Generate Statement
              </Button>
            </CardContent>
          </Card>

          {/* Available Statements */}
          <Card className="lg:col-span-2 bg-slate-800/50 border-slate-700">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="text-white">Available Statements</CardTitle>
                <Button variant="outline" size="sm" className="border-slate-600 text-slate-300">
                  <Filter size={16} className="mr-2" />
                  Filter
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {statements.map((statement) => (
                  <div key={statement.id} className="flex items-center justify-between p-4 bg-slate-700/30 rounded-lg">
                    <div className="flex items-center space-x-4">
                      <div className="w-10 h-10 bg-orange-500/20 rounded-lg flex items-center justify-center">
                        <FileText size={20} className="text-orange-400" />
                      </div>
                      <div>
                        <h3 className="text-white font-medium">{statement.type}</h3>
                        <p className="text-slate-400 text-sm">{statement.account} • {statement.period}</p>
                        <p className="text-slate-500 text-xs">{statement.date} • {statement.size}</p>
                      </div>
                    </div>
                    <Button
                      onClick={() => handleDownload(statement.id)}
                      size="sm"
                      className="bg-orange-500 hover:bg-orange-600 text-white"
                    >
                      <Download size={16} className="mr-2" />
                      Download
                    </Button>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Quick Actions */}
        <Card className="bg-slate-800/50 border-slate-700">
          <CardHeader>
            <CardTitle className="text-white">Quick Actions</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <Button variant="outline" className="border-slate-600 text-slate-300 hover:text-white">
                <Calendar className="mr-2" size={16} />
                Schedule Auto-Generation
              </Button>
              <Button variant="outline" className="border-slate-600 text-slate-300 hover:text-white">
                <FileText className="mr-2" size={16} />
                Tax Documents
              </Button>
              <Button variant="outline" className="border-slate-600 text-slate-300 hover:text-white">
                <Download className="mr-2" size={16} />
                Bulk Download
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Statements;